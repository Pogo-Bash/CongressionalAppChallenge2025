name: Curriq Build Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  # Simple build job to test basic setup
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          # Remove cache option to avoid lock file dependency
          # cache: 'npm'

      - name: Create .env file with fallback values
        run: |
          echo "# Default environment for CI" > .env
          echo "FIREBASE_API_KEY=${FIREBASE_API_KEY:-dummy-api-key}" >> .env
          echo "FIREBASE_APP_ID=${FIREBASE_APP_ID:-1:123456789:web:abcdef1234567890}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN:-project-id.firebaseapp.com}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID:-G-ABCDEF1234}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID:-123456789}" >> .env
          echo "FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-project-id}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET:-project-id.appspot.com}" >> .env
          echo "GOOGLE_CLASSROOM_API_KEY=${GOOGLE_CLASSROOM_API_KEY:-dummy-google-api-key}" >> .env
          echo "GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID:-dummy-oauth-client-id}" >> .env
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          GOOGLE_CLASSROOM_API_KEY: ${{ secrets.GOOGLE_CLASSROOM_API_KEY }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install
          echo "Dependencies installed successfully."

      - name: Check for shared directories
        run: |
          mkdir -p src/shared
          mkdir -p mobile/www/shared
          echo "Shared directories created."

      - name: Run copy-shared script
        run: |
          echo "Running copy-shared script..."
          npm run copy-shared || echo "Warning: copy-shared script failed, but continuing build"

      - name: Create basic build
        run: |
          echo "Attempting basic build..."
          npm run build || echo "Build failed, but workflow continues for diagnostics"

      - name: Upload environment info
        uses: actions/upload-artifact@v4
        with:
          name: environment-info
          path: .env
          retention-days: 1

  # Full build job once setup is verified
  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # Remove cache option to avoid lock file requirement
          # cache: 'npm'

      - name: Create .env file with fallback values
        shell: bash
        run: |
          echo "# Environment for CI build" > .env
          echo "FIREBASE_API_KEY=${FIREBASE_API_KEY:-dummy-api-key}" >> .env
          echo "FIREBASE_APP_ID=${FIREBASE_APP_ID:-1:123456789:web:abcdef1234567890}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN:-project-id.firebaseapp.com}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID:-G-ABCDEF1234}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID:-123456789}" >> .env
          echo "FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-project-id}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET:-project-id.appspot.com}" >> .env
          echo "GOOGLE_CLASSROOM_API_KEY=${GOOGLE_CLASSROOM_API_KEY:-dummy-google-api-key}" >> .env
          echo "GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID:-dummy-oauth-client-id}" >> .env
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          GOOGLE_CLASSROOM_API_KEY: ${{ secrets.GOOGLE_CLASSROOM_API_KEY }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}

      - name: Install dependencies
        run: npm install

      - name: Create required directories
        run: |
          mkdir -p src/shared
          mkdir -p mobile/www/shared

      - name: Copy shared files
        run: npm run copy-shared
        continue-on-error: true

      - name: Lint code
        run: npm run lint
        continue-on-error: true

      - name: Format check
        run: npx prettier --check .
        continue-on-error: true

      - name: Build Electron application
        run: npm run build
        continue-on-error: ${{ matrix.os != 'ubuntu-latest' }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build-${{ matrix.os }}
          path: |
            out
            dist
          if-no-files-found: warn
          retention-days: 7

  # Only attempt packaging if the main build succeeds
  desktop-packaging:
    needs: build
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            platform: linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Create .env file with fallback values
        shell: bash
        run: |
          echo "# Environment for packaging" > .env
          echo "FIREBASE_API_KEY=${FIREBASE_API_KEY:-dummy-api-key}" >> .env
          echo "FIREBASE_APP_ID=${FIREBASE_APP_ID:-1:123456789:web:abcdef1234567890}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN:-project-id.firebaseapp.com}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID:-G-ABCDEF1234}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID:-123456789}" >> .env
          echo "FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-project-id}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET:-project-id.appspot.com}" >> .env
          echo "GOOGLE_CLASSROOM_API_KEY=${GOOGLE_CLASSROOM_API_KEY:-dummy-google-api-key}" >> .env
          echo "GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID:-dummy-oauth-client-id}" >> .env
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          GOOGLE_CLASSROOM_API_KEY: ${{ secrets.GOOGLE_CLASSROOM_API_KEY }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}

      - name: Install dependencies
        run: npm install

      - name: Create required directories
        run: |
          mkdir -p src/shared
          mkdir -p mobile/www/shared
          mkdir -p out

      - name: Copy shared files
        run: npm run copy-shared
        continue-on-error: true

      - name: Build application
        run: npm run build
        continue-on-error: false

      - name: Build platform-specific package
        run: npm run build:${{ matrix.platform }}
        continue-on-error: true

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: curriq-${{ matrix.platform }}
          path: |
            out
          if-no-files-found: warn
          retention-days: 30

  # Mobile build as a separate job
  mobile-build:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Create .env file with fallback values
        run: |
          echo "# Environment for mobile build" > .env
          echo "FIREBASE_API_KEY=${FIREBASE_API_KEY:-dummy-api-key}" >> .env
          echo "FIREBASE_APP_ID=${FIREBASE_APP_ID:-1:123456789:web:abcdef1234567890}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN:-project-id.firebaseapp.com}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID:-G-ABCDEF1234}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID:-123456789}" >> .env
          echo "FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-project-id}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET:-project-id.appspot.com}" >> .env
          echo "GOOGLE_CLASSROOM_API_KEY=${GOOGLE_CLASSROOM_API_KEY:-dummy-google-api-key}" >> .env
          echo "GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID:-dummy-oauth-client-id}" >> .env
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          GOOGLE_CLASSROOM_API_KEY: ${{ secrets.GOOGLE_CLASSROOM_API_KEY }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}

      - name: Install dependencies
        run: npm install

      - name: Create required directories
        run: |
          mkdir -p src/shared
          mkdir -p mobile/www/shared

      - name: Copy shared files
        run: npm run copy-shared
        continue-on-error: true

      - name: Build mobile web app
        run: npm run mobile:build
        continue-on-error: true

      - name: Upload mobile build
        uses: actions/upload-artifact@v4
        with:
          name: curriq-mobile-web
          path: mobile/www
          if-no-files-found: warn
          retention-days: 30
